#include "cooperative_transportation_4ws_backstepping/kinematics_solver.hpp"
#include "cooperative_transportation_4ws_backstepping/initial.hpp"
#include "cooperative_transportation_4ws_backstepping/mathFunc.h"
#include <array>
#include <iostream>

double KinematicsSolver::calc_aqd_17_()
{
double ret;
ret = (nu1*(-(Sin(x_old[4] - Thetap0 + Thetap1)*Sin(x_old[4] - x_old[6] + Thetap1 - Thetap2)) + Cos(x_old[4] - x_old[6] + Thetap1 - Thetap2)*(Cos(x_old[4] - Thetap0 + Thetap1) + 2*Sin(x_old[4] - Thetap0 + Thetap1)*Tan(x_old[4])) - (Cos(x_old[4] - x_old[6] + Thetap1 - Thetap2)*Sin(x_old[4] - Thetap0 + Thetap1) + Sin(x_old[4] - x_old[6] + Thetap1 - Thetap2)*(Cos(x_old[4] - Thetap0 + Thetap1) + 2*Sin(x_old[4] - Thetap0 + Thetap1)*Tan(x_old[4])))*Tan(x_old[10])))/wheelRadius + (uact1(t)*(-(Power(Sec(x_old[10]),2)*(Cos(x_old[4] - x_old[6] + Thetap1 - Thetap2)*Sin(x_old[4] - Thetap0 + Thetap1) + Sin(x_old[4] - x_old[6] + Thetap1 - Thetap2)*(Cos(x_old[4] - Thetap0 + Thetap1) + 2*Sin(x_old[4] - Thetap0 + Thetap1)*Tan(x_old[4])))*u_act(5)) - Cos(x_old[4] - Thetap0 + Thetap1)*Sin(x_old[4] - x_old[6] + Thetap1 - Thetap2)*(-u_act(1) + u_act(2) + calc_SX_5_1_()*u1_act) + Cos(x_old[4] - x_old[6] + Thetap1 - Thetap2)*(2*Power(Sec(x_old[4]),2)*Sin(x_old[4] - Thetap0 + Thetap1)*u_act(2) - Sin(x_old[4] - Thetap0 + Thetap1)*(-u_act(1) + u_act(2) + calc_SX_5_1_()*u1_act) + 2*Cos(x_old[4] - Thetap0 + Thetap1)*Tan(x_old[4])*(-u_act(1) + u_act(2) + calc_SX_5_1_()*u1_act)) - Tan(x_old[10])*(Cos(x_old[4] - Thetap0 + Thetap1)*Cos(x_old[4] - x_old[6] + Thetap1 - Thetap2)*(-u_act(1) + u_act(2) + calc_SX_5_1_()*u1_act) + Sin(x_old[4] - x_old[6] + Thetap1 - Thetap2)*(2*Power(Sec(x_old[4]),2)*Sin(x_old[4] - Thetap0 + Thetap1)*u_act(2) - Sin(x_old[4] - Thetap0 + Thetap1)*(-u_act(1) + u_act(2) + calc_SX_5_1_()*u1_act) + 2*Cos(x_old[4] - Thetap0 + Thetap1)*Tan(x_old[4])*(-u_act(1) + u_act(2) + calc_SX_5_1_()*u1_act)) - Sin(x_old[4] - Thetap0 + Thetap1)*Sin(x_old[4] - x_old[6] + Thetap1 - Thetap2)*(u_act(2) - u_act(3) + calc_SX_5_1_()*u1_act - calc_SX_7_1_()*u1_act) + Cos(x_old[4] - x_old[6] + Thetap1 - Thetap2)*(Cos(x_old[4] - Thetap0 + Thetap1) + 2*Sin(x_old[4] - Thetap0 + Thetap1)*Tan(x_old[4]))*(u_act(2) - u_act(3) + calc_SX_5_1_()*u1_act - calc_SX_7_1_()*u1_act)) - Cos(x_old[4] - x_old[6] + Thetap1 - Thetap2)*Sin(x_old[4] - Thetap0 + Thetap1)*(u_act(2) - u_act(3) + calc_SX_5_1_()*u1_act - calc_SX_7_1_()*u1_act) - Sin(x_old[4] - x_old[6] + Thetap1 - Thetap2)*(Cos(x_old[4] - Thetap0 + Thetap1) + 2*Sin(x_old[4] - Thetap0 + Thetap1)*Tan(x_old[4]))*(u_act(2) - u_act(3) + calc_SX_5_1_()*u1_act - calc_SX_7_1_()*u1_act)))/wheelRadius;
return ret;
}
